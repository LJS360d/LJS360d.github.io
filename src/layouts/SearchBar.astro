---
import { MdSearch } from "react-icons/md";
---

<div class="relative">
  <div
    id="search-loading"
    hidden
    class="loading loading-spinner loading-md bg-accent absolute top-3 -left-8"
  >
  </div>
  <label class="relative">
    <MdSearch className="absolute left-3 top-[2.5px] text-lg text-gray-500" />
    <input
      autocomplete="off"
      id="search-input"
      placeholder="Search..."
      class="pl-8 pr-16 border-accent w-48 input focus:outline-none"
      type="text"
    />
    <span
      class="absolute select-none pointer-events-none right-4 top-[2.5px] text-xs text-gray-300"
      >CTRL K</span
    >
  </label>
</div>
<!-- CTRL K focus -->
<script>
  const inputElement = document.getElementById(
    "search-input",
  ) as HTMLInputElement;
  window.addEventListener("keydown", (event) => {
    if (event.key === "k" && event.ctrlKey) {
      event.stopImmediatePropagation();
      event.stopPropagation();
      event.preventDefault();
      inputElement.focus();
    }
  });
</script>

<!-- search event -->
<script>
  const DEBOUNCE_DELAY = 500;
  import { debounce } from "../utils/event.utils.mjs";
  const inputElement = document.getElementById(
    "search-input",
  ) as HTMLInputElement;
  const loadingElement = document.getElementById(
    "search-loading",
  ) as HTMLDivElement;

  const debouncedDispatchSearchEvent = debounce(function (event: Event) {
    const text = (event.target as HTMLInputElement).value;
    dispatchSearchEvent(text);
  }, DEBOUNCE_DELAY);

  inputElement.addEventListener("input", debouncedDispatchSearchEvent);
  document.addEventListener("searchEnd", handleSearchEnd);

  function dispatchSearchEvent(text: string) {
    const searchEvent = new CustomEvent("search", {
      detail: { text },
    });
    loadingElement.hidden = false;
    document.dispatchEvent(searchEvent);
  }

  function handleSearchEnd(_: Event) {
    loadingElement.hidden = true;
  }
</script>
