---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Parse savefile">
  <div class="grid grid-flow-col justify-around items-start mt-8">
    <div class="grid grid-flow-row">
      <!-- .sav input -->
      <label for="sav-file-input" class="flex flex-col mt-6 items-center justify-center p-6 bg-accent/10 rounded-lg shadow-md cursor-pointer 
    h-64 border-2 border-dashed border-accent hover:bg-accent/20"
    >
        <span class="text-lg font-semibold">Drop your .sav file here or click to browse</span>
        <input id="sav-file-input" type="file" accept=".sav" class="hidden">
      </label>
      <span class="mt-8">Current ROM</span>
      <input name="loaded-rom" id="loaded-rom" type="text" class="w-full p-4 bg-primary/10 rounded-lg shadow-md"
        readonly>
      <span class="text-xs">Upload a .gba file to Override the ROM with your own</span>
      <!-- .gba input -->
      <label for="gba-file-input" class="flex flex-col mt-6 items-center justify-center p-6 bg-primary/10 rounded-lg shadow-md cursor-pointer 
      h-64 border-2 border-dashed border-primary hover:bg-primary/20
      ">
        <span class="text-lg font-semibold">Drop your .gba file here or click to browse</span>
        <input id="gba-file-input" type="file" accept=".gba" class="hidden">
      </label>

    </div>
    <div>
      <span>Team</span>
      <textarea id="team-mons" class="w-full min-h-64 h-full p-4 bg-primary/10 rounded-lg shadow-md" readonly rows="15"
        cols="50"></textarea>
    </div>
    <div>
      <span>PC</span>
      <textarea id="pc-mons" class="w-full min-h-64 h-full p-4 bg-primary/10 rounded-lg shadow-md" readonly rows="25"
        cols="50"></textarea>
    </div>
  </div>
</Layout>

<script>
  import { SaveParser, DEFAULT_ROM_FILENAME } from "../save-parser/save-parser";
  const parser = await SaveParser.init();

  
  const savFileInput = document.getElementById("sav-file-input") as HTMLInputElement;
  savFileInput.addEventListener("change", async function (e) {
    e.preventDefault();
    const file = savFileInput.files![0];
    await updateSav(file);
    savFileInput.value = '';
    savFileInput.files = null;
  });
  savFileInput.labels![0].ondrop = function (e) {
    e.preventDefault();
    const file = e.dataTransfer!.files[0];
    updateSav(file);
  };
  savFileInput.labels![0].ondragover = e => e.preventDefault();
  const gbaFileInput = document.getElementById("gba-file-input") as HTMLInputElement;
  gbaFileInput.addEventListener("change", async function (e) {
    e.preventDefault();
    const file = gbaFileInput.files![0];
    await updateGba(file);
    gbaFileInput.value = '';
    gbaFileInput.files = null;
  });
  gbaFileInput.addEventListener("drop", async function (e) {
    e.preventDefault();
    const file = e.dataTransfer!.files[0];
    await updateGba(file);
  });
  gbaFileInput.ondragover = e => e.preventDefault();
  
  
  async function updateSav(file: File) {
    const buffer = new Uint8Array(await file.arrayBuffer());
    const result = await parser.parseSav(buffer);
    const pcMons = result.pc.pokemon.filter(Boolean).map((mon) => mon.toSDExportFormat()).join("\n\n");
    const teamMons = result.team.map((mon) => mon.toSDExportFormat()).join("\n\n");
    const pcTextarea = document.getElementById("pc-mons") as HTMLTextAreaElement;
    pcTextarea.value = pcMons;
    const teamTextarea = document.getElementById("team-mons") as HTMLTextAreaElement;
    teamTextarea.value = teamMons;
  }
  
  const romSelect = document.getElementById("loaded-rom") as HTMLInputElement;
  romSelect.value = DEFAULT_ROM_FILENAME;
  async function updateGba(file: File) {
    const fileName = file.name.split(".")[0];
    const buffer = new Uint8Array(await file.arrayBuffer());
    try {
      await parser.loadRomData(buffer);
      romSelect.value = fileName;
    } catch {
      alert("Unsupported ROM file");
    }
  }
</script>