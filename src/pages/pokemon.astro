---
import PokemonComponent from "../components/ui/pokemon/PokemonComponent";
import PokemonSearchFilter from "../components/ui/pokemon/PokemonSearchFilter";
import { learnsets } from "../data";
import Layout from "../layouts/Layout.astro";
import {
  getBaseMonsData,
  getMonAlternateForms,
} from "../utils/pokemon.data.utils";

function getLearnset(pokemonId: number) {
  return learnsets.find((ls) => ls.species === pokemonId);
}
---

<Layout title="PokÃ¨mon">
  <PokemonSearchFilter client:load />
  <ul id="pokemon-list" class="list-base">
    {
      getBaseMonsData().map((mon) => (
        <PokemonComponent
          client:visible
          pokemon={mon}
          forms={getMonAlternateForms(mon.species)}
          learnset={getLearnset(mon.id)}
        />
      ))
    }
  </ul>
</Layout>

<script>
  import { type PokemonFilters } from "../components/ui/pokemon/PokemonSearchFilter";
  import { updateList } from "../utils/search.utils";
  let pokemonArr: HTMLLIElement[] = [];
  document.addEventListener("DOMContentLoaded", () => {
    // Wait for React components to mount and render
    setTimeout(() => {
      const parent = document.getElementById("pokemon-list")!;
      const islands = Array.from(parent.querySelectorAll("astro-island")!);

      pokemonArr = islands.map((island) => {
        // Access the rendered content of each astro-island
        const content = island.shadowRoot
          ? island.shadowRoot.querySelector("*")
          : island.querySelector("*");
        return content as HTMLLIElement;
      });
    }, 0);
  });
  document.addEventListener("search", (ev) => {
    updateList<PokemonFilters>(ev, pokemonArr, "data-name");
  });
</script>

<!-- <script>
  import autoAnimate from "@formkit/auto-animate";
  const pokemonList = document.getElementById(
    "pokemon-list",
  ) as HTMLUListElement;
  autoAnimate(pokemonList);
  const pokemonArr = Array.from(pokemonList.children) as HTMLLIElement[];
  document.addEventListener("search", (event: Event) => {
    const searchText = (event as CustomEvent).detail.text.toUpperCase();
    pokemonList.innerHTML = "";
    pokemonArr.forEach((pokemonElement) => {
      const pokemonName = pokemonElement.getAttribute("data-pokemon-name")!;
      if (searchText !== "" && pokemonName.includes(searchText)) {
        pokemonList.appendChild(pokemonElement);
      }
    });
  });
</script> -->
